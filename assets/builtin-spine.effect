// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - passes:
    - vert: sprite-vs:vert
      frag: sprite-fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        alphaThreshold: { value: 0.5 }
        time: { value: 0 }
        mainColor: { value: [0.0,0.0,0.0,1.0], editor: { type: color} }
        endColor: { value: [0.0,0.0,0.0,1.0], editor: { type: color} }
}%

CCProgram sprite-vs %{
  precision highp float;
  #include <builtin/uniforms/cc-global>
  #if USE_LOCAL
    #include <builtin/uniforms/cc-local>
  #endif

  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 v_light;
  out vec2 uv0;

  #if TWO_COLORED
    in vec4 a_color2;
    out vec4 v_dark;
  #endif

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);    

    #if USE_LOCAL
      pos = cc_matWorld * pos;
    #endif

    pos = cc_matViewProj * pos;

    uv0 = a_texCoord;

    v_light = a_color;
    #if TWO_COLORED
      v_dark = a_color2;
    #endif

    return pos;
  }
}%
-
CCProgram sprite-fs %{
  precision highp float;
  #include <builtin/internal/alpha-test>

  in vec4 v_light;
  #if TWO_COLORED
    in vec4 v_dark;
  #endif
  in vec2 uv0;
  #pragma builtin(local)
  layout(set = 2, binding = 12) uniform sampler2D cc_spriteTexture;

  uniform Constant {
      vec4 mainColor;
      vec4 endColor;
      int time;
  };
  vec4 frag () {  
    vec4 o = vec4(1, 1, 1, 1);

    vec2 center = vec2(180.0,360.0);
//    float dis = distance(center,gl_FragCoord.xy)-time;
//    float max= 50.0;
//    float height = max*(sin(dis*100.0)+1.0);
    vec2 uv = uv0;
    //int a = int(mod(time,8.0));//0-7
    int a=time;

    if(a==0 || a==4 )
      uv.x=0.0;
    else if(a>4)
      uv.x=1.0-uv0.x;

    if(a==2 || a==6)
      uv.y=0.0;
    else if(a>2 && a<7)
      uv.y=1.0-uv0.y;
    if(uv.x!=0.0)
      o.rgb *= mix(mainColor,endColor,uv.x).rgb;
    if(uv.y!=0.0)
      o.rgb *= mix(mainColor,endColor,uv.y).rgb;
    o = mix(mainColor,endColor,uv0.x);
    #if TWO_COLORED
      vec4 texColor = vec4(1, 1, 1, 1);

      texColor *= texture(cc_spriteTexture, uv0);
 	    o.a = texColor.a * v_light.a;
      o.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;
    #else
      o = vec4(1,1,1,1);
//      o *= mix(mainColor,endColor,uv0.y);
      o.r=1.0;
      o.g=0.0;
      o.b=0.0;

      o.a = mix(mainColor,endColor,uv0.y).a;

//      vec2 center = vec2(180.0,360.0);
//      float dis = distance(center,gl_FragCoord.xy)-time;
//      float max= 50.0;
//      float height = max*(sin(dis*100.0)+1.0);

//      o = v_color;
//      float gradient = mod(distance(center,gl_FragCoord.xy)-time,max);
//      if(gradient<max/2.0)
//        o.rgb *= 1.0-gradient/max;
//      else
//        o.rgb *= 1.0-(max-gradient)/max;
//    o *= mainColor;      
    #endif
    ALPHA_TEST(o);
    return o;
  }
}%
